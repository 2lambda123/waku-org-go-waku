library 'status-jenkins-lib@v1.7.0'

pipeline {
  agent {
    label 'linux && nix-2.11 && x86_64'
  }

  options {
    timestamps()
    disableConcurrentBuilds()
    /* Prevent Jenkins jobs from running forever */
    timeout(time: 30, unit: 'MINUTES')
    /* Limit builds retained */
    buildDiscarder(logRotator(
      numToKeepStr: '10',
      daysToKeepStr: '20',
      artifactNumToKeepStr: '10',
    ))
  }

  environment {
    TARGET = 'nix-flake'
  }

  stages {
    stage('Node') {
      stages {
        stage('Build') {
          steps { script {
            sh("""#!/usr/bin/env bash
              ${nix._sourceProfileInline()}
              nix build --print-out-paths .#node
            """)
          } }
        }
        stage('Check') {
          steps {
            sh './result/bin/waku --version'
          }
        }
      }
    }

    stage('Library') {
      stages {
        stage('Build') {
          steps { script {
            sh("""#!/usr/bin/env bash
              ${nix._sourceProfileInline()}
              nix build --print-out-paths .#library
            """)
          } }
        }
        stage('Check') {
          steps {
            sh 'ldd ./result/bin/library'
          }
        }
      }
    }
  }
  post {
    always { script { /* No artifact but a PKG_URL is necessary. */
      env.PKG_URL = "${currentBuild.absoluteUrl}consoleText"
    } }
    success { script { github.notifyPR(true) } }
    failure { script { github.notifyPR(false) } }
    cleanup { cleanWs() }
  }
}
